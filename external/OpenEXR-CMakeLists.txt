project(OpenEXR)
cmake_minimum_required(VERSION 2.8)

# have an option to build static or dynamic libraries.
# the exact name of this option seems to be important for CMake.
# I always have it ON.  I suggest you do the same as the OFF state is not tested ...
option(BUILD_SHARED_LIBS "build shared libraries" ON)
if(BUILD_SHARED_LIBS)
    add_definitions(-DOPENEXR_DLL)
endif()

if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    get_filename_component(_path "${CMAKE_SOURCE_DIR}/../../Deploy" ABSOLUTE)
    set (CMAKE_INSTALL_PREFIX "${_path}" CACHE PATH "install prefix" FORCE)
endif ()

include(IlmMacros.cmake)

find_package(IlmBase)

# we also need ZLIB.
find_package(ZLIB)
add_definitions(
    -DZLIB_DLL
    )

if (NOT CMAKE_CL_64)
    add_definitions(
        /arch:SSE2
        )
endif()

include_directories(
    "config.windows"
    "${IlmBase_INCLUDE_DIRS}"
    "${ZLIB_INCLUDE_DIRS}"
    "${CMAKE_BINARY_DIR}"
    )


# --- IlmImf
ILM_ADD_LIBRARY(IlmImf)
target_link_libraries(IlmImf
    Half
    Iex
    IMath
    IlmThread
    ${ZLIB_LIBRARIES}
    )
ILM_ADD_TEST(IlmImf)
ILM_INSTALL_HEADERS(
    "config.windows/OpenEXRConfig.h"
    )

# --- exr*
foreach (target exr2aces exrenvmap exrheader exrmakepreview exrmaketiled exrstdattr)
    ILM_ADD_EXECUTABLE("${target}")
    target_link_libraries("${target}"
        IlmImf
        )
endforeach()
